------------------------------------------------------------
public static int alternatingSum(int[] arr) {
  int counter = 0;
  int hasil = 0;
  
  for (int i : arr) {
    if (counter == 0) {
      hasil += i;
      counter = 1;
    } else if (counter == 1) {
      hasil -= i;
      counter = 0;
    }
  }
  
  return hasil;
}
------------------------------------------------------------

------------------------------------------------------------
public static int getTotal(int[] arr) {
  int total = 0;

  for (int i : arr) {
    total += i;
  }

  return total;
}

public static double getAverage(int[] arr) {
  int total = 0;

  for (int i : arr) {
    total += i;
  }

  return (double) total / arr.length;
}

public static int getHighest(int[] arr) {
  int max = arr[0];

  for (int i : arr) {
    if (i > max) {
      max = i;
    }
  }

  return max;
}

public static int getLowest(int[] arr) {
  int min = arr[0];

  for (int i : arr) {
    if (i < min) {
      min = i;
    }
  }

  return min;
}
------------------------------------------------------------

------------------------------------------------------------
public class RataRata {
  public static void main(String[] args) {
    double total = 0;

    for (int i = 0; i < args.length; i++) {
            total += Double.parseDouble(args[i]);
    }

    System.out.println((double) total / args.length);
  }
}
------------------------------------------------------------

------------------------------------------------------------
public static double getTotal(double[][] arr) {
  double total = 0;

  for (int i = 0; i < arr.length; i++) {
    for (double j : arr[i]) {
      total += j;
    }
  }

  return total;
}

public static double getAverage(double[][] arr) {
  double total = 0;

  for (int i = 0; i < arr.length; i++) {
    for (double j : arr[i]) {
      total += j;
    }
  }

  return total / (arr[0].length * arr.length);
}

public static double getRowTotal(double[][] arr, int index) {
  double total = 0;

  for (double i : arr[index]) {
    total += i;
  }

  return total;
}

public static double getColumnTotal(double[][] arr, int index) {
  double total = 0;

  for (int i = 0; i < arr.length; i++) {
    total += arr[i][index];
  }

  return total;
}

public static double getHighestInRow(double[][] arr, int index) {
  double max = arr[index][0];

  for (double i : arr[index]) {
    if (i > max) {
      max = i;
    }
  }

  return max;
}

public static double getLowestInRow(double[][] arr, int index) {
  double min = arr[index][0];

  for (double i : arr[index]) {
    if (i < min) {
      min = i;
    }
  }

  return min;
}
------------------------------------------------------------
